parameters:
  - name: DEFAULT_DB_TYPE
    type: string
    default: 'SCYLLADB'

steps:
# Cache dockerhub database images (only the ones that remain constant)
- task: Cache@2
  inputs:
    key: 'dockerHubImages | "$(Agent.OS)"'
    path: dockerImages.tar
  displayName: "Check for Cached Docker Hub images"

- script: |
    if [ ! -f dockerImages.tar ]; then
      docker pull scylladb/scylla:latest
      docker pull redis:latest
      docker pull mariadb:latest
      docker save scylladb/scylla:latest redis:latest mariadb:latest -o dockerImages.tar
    fi
  displayName: "Pull and save Docker Hub images if not cached"

- script: |
    if [ -f dockerImages.tar ]; then
      docker load -i dockerImages.tar
    fi
  displayName: "Load Docker Hub images from cache"

# Cache locally built docker images (only the ones that remain constant)
- task: Cache@2
  inputs:
    key: 'docker | "$(Agent.OS)" | ./contrib/python_base/Dockerfile, ./contrib/node/Dockerfile'
    path: $(dockerCache)
  displayName: Check for Cached Docker layers

- script: |
    if [ -d "$(dockerCache)" ]; then
      # Load the Docker cache
      docker load -i $(dockerCache)/cache.tar
    fi
  displayName: Load Docker build cache

- script: |
    # Build Docker images here, making use of the Docker cache if available
    docker build -t python-base-image ./contrib/python_base
    docker build -t node-image ./contrib/node
  displayName: Build Docker images

- script: |
    # Save the Docker cache
    mkdir -p $(dockerCache)
    docker save python-base-image node-image > $(dockerCache)/cache.tar
  displayName: Save Docker build cache


- script: |
    export DOCKER_GATEWAY_HOST=172.17.0.1
    docker build -f ./contrib/python_base/Dockerfile . -t python_base
    docker-compose -f docker-compose.yml build --parallel

    docker-compose -f docker-compose.yml up -d node
    export PYTHONPATH=.
    python3 ./contrib/scripts/start_with_corrupted_db.py

    docker-compose -f docker-compose.yml up -d
    docker-compose -f docker-compose.yml logs
  timeoutInMinutes: 10
  continueOnError: true
  displayName: 'Run dockerized services'

- script: |
    export DEFAULT_DB_TYPE=${{ parameters.DEFAULT_DB_TYPE }}
    pytest tests_functional --verbose
    if [ $? -gt 0 ]
    then
      docker-compose logs conduit-raw
      docker-compose logs conduit-index
      docker-compose logs reference_server
      docker-compose logs node
      exit 1
    fi
  timeoutInMinutes: 10
  continueOnError: false
  displayName: 'Pytest Functional'

- script: |
    python3 -m pip install electrumsv_node
    python3 -m pip install pytest-asyncio
    pytest tests --verbose
  timeoutInMinutes: 10
  continueOnError: false
  displayName: 'Pytest'

- script: |
    docker-compose -f docker-compose.yml kill
    docker-compose -f docker-compose.yml down
    echo "Removing ./contrib/functional_test_datadirs ..."
    rm -r ./contrib/functional_test_datadirs
  timeoutInMinutes: 10
  continueOnError: true
  displayName: 'Docker Down'
