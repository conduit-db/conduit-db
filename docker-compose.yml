version: "3.8"

# This docker-compose is not for production use. It is solely for development and testing.

services:

  node:
    container_name: node
    build:
      context: .
      dockerfile: ./contrib/node/Dockerfile
    ports:
      - "18332:18332"
      - "18444:18444"
    volumes:
    - bitcoin_data:/root/.electrumsv-node

  mysql:
    image: austecon0922/mariadb-myrocks:latest
#    build:
#      context: .
#      dockerfile: ./contrib/mariadb/Dockerfile
    ports:
      - "52525:3306"
    environment:
      MYSQL_ROOT_PASSWORD: conduitpass
      MYSQL_DATABASE: conduitdb
      MYSQL_USER: conduitadmin
      MYSQL_PASSWORD: conduitpass

  scylladb:
    image: scylladb/scylla
    ports:
      - "9042:9042"
      - "19042:19042"
    environment:
      SCYLLA_USERNAME: conduitdb
      SCYLLA_PASSWORD: conduitpass

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  reference_server:
    container_name: reference_server
    depends_on:
      - "conduit-raw"
      - "conduit-index"
    build:
      context: .
      dockerfile: ./contrib/reference_server/Dockerfile
    ports:
      - "47124:47124"
      - "47126:47126"
    environment:
      SKIP_DOTENV_FILE: 1  # Allows us to overrride all of the defaults in the .env file
      EXTERNAL_HOST: "0.0.0.0"
      EXTERNAL_PORT: 47124
      INTERNAL_HOST: "0.0.0.0"
      INTERNAL_PORT: 47126
      EXPOSE_HEADER_SV_APIS: 1
      HEADER_SV_URL: 'http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:34525'
      EXPOSE_PAYMAIL_APIS: 1
      EXPOSE_INDEXER_APIS: 1
      INDEXER_URL: 'http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:34525'
      NOTIFICATION_TEXT_NEW_MESSAGE: New message arrived
      MAX_MESSAGE_CONTENT_LENGTH: 65536
      CHUNKED_BUFFER_SIZE: 1024
      NETWORK: regtest
      ENABLE_OUTBOUND_DATA_DELIVERY: 1
    command:
      sh -c 'python3 /reference_server/server.py'

  conduit-raw:
    build:
      context: .
      dockerfile: ./conduit_raw/Dockerfile
    ports:
      - "50000:50000"
      - "34525:34525"
      - "51495:51495"
      - "60000:60000"
      - "60001:60001"
      - "60002:60002"
      - "60003:60003"
    depends_on:
      - node
      - mysql
    environment:
      - IPC_SOCKET_SERVER_HOST=0.0.0.0:50000
      - BITCOIN_HOST=node
      - BITCOIN_RPC_PORT=18332
      - LMDB_READONLY=0
      - LMDB_DATABASE_PATH=/opt/lmdb_data
      - ZMQ_CONNECT_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
      - REFERENCE_SERVER_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
    working_dir: /opt
    command: sh -c 'python3 /opt/conduit_raw/run_conduit_raw.py'

  conduit-index:
    build:
      context: .
      dockerfile: ./conduit_index/Dockerfile
    depends_on:
      - node
      - mysql
      - scylladb
      - conduit-raw
    environment:
      - IPC_SOCKET_SERVER_HOST=conduit-raw:50000
      - ZMQ_CONNECT_HOST=${DOCKER_GATEWAY_HOST:-host.docker.internal}
    working_dir: /opt
    command: sh -c 'python3 /opt/conduit_index/run_conduit_index.py'
#    command: sh -c 'gdb -ex r --args python3 /opt/conduit_index/run_conduit_index.py'

#  # MerchantAPI & postgres dependency are purely for ease of testing ElectrumSV against the stack
#  postgres:
#    image: postgres
#    container_name: postgres
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./contrib/create_mapi_user.sh:/docker-entrypoint-initdb.d/create_mapi_user.sh
#    environment:
#      - POSTGRES_DB=postgres
#      - POSTGRES_USER=mapimaster
#      - POSTGRES_PASSWORD=mapimasterpass
#    stdin_open: true
#    tty: true
#
#  merchant_api:
#    container_name: merchant_api
#    depends_on:
#      - "postgres"
#    build:
#      context: .
#      dockerfile: ./contrib/merchant_api/Dockerfile
#    ports:
#      - "5050:5050"
#    environment:
#      ASPNETCORE_ENVIRONMENT: PRODUCTION
#      ASPNETCORE_Kestrel__Certificates__Default__Password: YourSecurePassword
#      ASPNETCORE_Kestrel__Certificates__Default__Path:
#      ASPNETCORE_URLS: http://0.0.0.0:5050
#      ConnectionStrings__DBConnectionString: "Server=host.docker.internal;Port=5432;UserId=mapi_crud;Password=merchant;Database=merchant_gateway;"
#      ConnectionStrings__DBConnectionStringDDL: "Server=host.docker.internal;Port=5432;User Id=merchantddl;Password=merchant;Database=merchant_gateway;"
#      ConnectionStrings__DBConnectionStringMaster: "Server=host.docker.internal;Port=5432;User Id=mapimaster;Password=mapimasterpass;Database=merchant_gateway;"
#      AppSettings__QuoteExpiryMinutes: 10
#      AppSettings__CallbackIPAddresses:
#      AppSettings__ZmqConnectionTestIntervalSec: 60
#      AppSettings__RestAdminAPIKey: apikey
#      AppSettings__DeltaBlockHeightForDoubleSpendCheck: 144
#      AppSettings__CleanUpTxAfterDays: 3
#      AppSettings__CleanUpTxPeriodSec: 3600
#      AppSettings__WifPrivateKey: Kz4oGtUm2jbJGmDVHgUxgMppaXNUbcfR3myHxvjVWm7zhrCK3LdW
#      AppSettings__Notification__NotificationIntervalSec: 60
#      AppSettings__Notification__InstantNotificationsTasks: 2
#      AppSettings__Notification__InstantNotificationsQueueSize: 1000
#      AppSettings__Notification__MaxNotificationsInBatch: 100
#      AppSettings__Notification__SlowHostThresholdInMs: 1000
#      AppSettings__Notification__InstantNotificationsSlowTaskPercentage: 20
#      AppSettings__Notification__NoOfSavedExecutionTimes: 10
#      AppSettings__Notification__NotificationsRetryCount: 10
#      AppSettings__Notification__SlowHostResponseTimeoutMS: 1000
#      AppSettings__Notification__FastHostResponseTimeoutMS: 2000
#      AppSettings__MinerIdServer__Url:
#      AppSettings__MinerIdServer__Alias:
#      AppSettings__MinerIdServer__Authentication:
#      AppSettings__CheckFeeDisabled: 'false'
#      AppSettings__DSHostBanTimeSec: 1000
#      AppSettings__DSMaxNumOfTxQueries: 100000
#      AppSettings__DSCachedTxRequestsCooldownPeriodSec: 1
#      AppSettings__DSMaxNumOfUnknownTxQueries: 100000
#      AppSettings__DSUnknownTxQueryCooldownPeriodSec: 1
#      AppSettings__DSScriptValidationTimeoutSec: 1
#      AppSettings__EnableHTTP: 'true'
#      AppSettings__DontParseBlocks: 'true'
#      AppSettings__DontInsertTransactions: 'true'
#    command:
#      sh -c 'dotnet /app/publish/MerchantAPI.APIGateway.Rest.dll'

volumes:
  bitcoin_data:
