version: "3.8"

services:

  zookeeper:
    image: zookeeper:3.4.14
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    hostname: kafka
    ports:
      - "26638:26638"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:26638
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:26638
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "logging:1:1,conduit-raw-headers-state:10:1"
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_MESSAGE_MAX_BYTES: 10485760  # 100MB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760  # 100MB
      KAFKA_TOPIC_MAX_MESSAGE_BYTES: 104857600  # 100MB

  node:
    build:
      context: .
      dockerfile: ./contrib/node/Dockerfile
    ports:
      - "18332:18332"
      - "18444:18444"
    volumes:
    - ./data/bitcoin_data:/root/.electrumsv-node
    environment:
      - NODE_RPCALLOWIP=0.0.0.0/0
      - NODE_RPCBIND=0.0.0.0
      - NODE_PORT=18332
      - NODE_P2P_PORT=18444
      - NODE_ZMQ_PORT=28332

  mysql:
    build:
      context: .
      dockerfile: ./contrib/mariadb/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: conduitpass
      MYSQL_DATABASE: conduitdb
      MYSQL_USER: conduitadmin
      MYSQL_PASSWORD: conduitpass
    volumes:
      - ./contrib/mariadb/config/my.cnf:/etc/mysql/my.cnf

  conduit-raw:
    build:
      context: .
      dockerfile: ./conduit_raw/Dockerfile
    ports:
      - "50000:50000"
    depends_on:
      - zookeeper
      - kafka
      - node
    volumes:
      - lmdb_data:/opt/lmdb_data
    environment:
      - LMDB_READONLY=0
      - LMDB_DATABASE_PATH=/opt/lmdb_data
    working_dir: /opt
    command: sh -c 'python3 /opt/conduit_raw/conduit_server.py --reset --regtest --node-host=node:18444 --kafka-host=kafka:9092'

  conduit-index:
    build:
      context: .
      dockerfile: ./conduit_index/Dockerfile
    depends_on:
      - node
      - mysql
      - zookeeper
      - kafka
    volumes:
      - lmdb_data:/opt/lmdb_data
    environment:
      - LMDB_READONLY=1
      - LMDB_DATABASE_PATH=/opt/lmdb_data
      - CONDUIT_RAW_API_HOST=conduit-raw-api:80
    working_dir: /opt
    command: sh -c 'python3 /opt/conduit_index/conduit_server.py --reset --regtest --node-host=node:18444 --mysql-host=mysql:3306 --kafka-host=kafka:9092'

## Unfortunately this service cannot share a common db file with the python-based conduit-raw
## There seems to be an issue with file permissions through docker with lmdb
## So will have to wait until the entirety of ConduitRaw is re-written in C# to utilise this gRPC
## Work
#  conduit-raw-api:
#    build:
#      context: .
#      dockerfile: ./ConduitRawAPI/Dockerfile
#    ports:
#      - "5000:80"
#    depends_on:
#      - conduit-raw
#      - zookeeper
#      - kafka
#    volumes:
#    - lmdb_data:/opt/lmdb_data

#  scylla-node1:
#    image: scylladb/scylla:4.4.0
#    restart: always
#    command: --seeds=scylla-node1 --api-address 0.0.0.0
#    volumes:
#      - "./scylla.yaml:/etc/scylla/scylla.yaml"
#      - "./cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
#    ports:
#      - "9042:9042"

volumes:
    lmdb_data:
